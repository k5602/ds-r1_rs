name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Verify formatting
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --all-targets --verbose

      - name: Test
        run: cargo test --all-targets --verbose

  run-examples:
    name: Run Examples
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Run config_demo
        run: cargo run --example config_demo --quiet

      - name: Run generation_demo
        run: cargo run --example generation_demo --quiet

      - name: Run math_solver_demo
        run: cargo run --example math_solver_demo --quiet

      - name: Run training_demo
        run: cargo run --example training_demo --quiet

  coverage:
    name: Test Coverage (tarpaulin)
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-tarpaulin
        run: |
          cargo install cargo-tarpaulin --locked || true
          cargo tarpaulin --version

      - name: Run coverage
        run: |
          mkdir -p coverage
          cargo tarpaulin \
            --out Xml \
            --output-dir coverage \
            --timeout 120 \
            --packages ds-r1-rs

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          if-no-files-found: error
